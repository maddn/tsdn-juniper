This is an example package to dynamically add an python device class as a supported
device into rsvp-te-fp package.

The usage of IOSXR device (with Native.py) is for illustration only.
You would need to implement those functions as indicated in the Native.py to properly configure
the device when you actually implement your plugin.

1. To configure rsvp-te-fp dynamic-device-mapping
   load merge the below into NSO
     <config xmlns="http://tail-f.com/ns/config/1.0">
      <cfp-configurations xmlns="http://cisco.com/ns/nso/fp/cisco-tsdn-rsvp-te">
        <dynamic-device-mapping>
          <ned-id>cisco-iosxr-nc-7.3:cisco-iosxr-nc-7.3</ned-id>
          <python-impl-class-name>rsvp_te_multi_vendors.NativeXR</python-impl-class-name>
        </dynamic-device-mapping>
      </cfp-configurations>
    </config>

2. Add this package into NSO run-time packages dir.
   NOTE: This package's package-meta-data.xml has to be configured to run under the same python VM
   as cisco-rsvp-te-fp package in this case:

    <python-package>
      <vm-name>cisco-rsvp-te-fp</vm-name>
    </python-package>

3. Restart NSO with package-reload option
   ncs --with-package-reload

4. When you try to use Cisco IOSXR Device
   a. Without this extention, you will get an error "Router NED not supported "
   b. With this extention, you will observe the proper python skeleton functions are called